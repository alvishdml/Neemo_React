{
  "version": 3,
  "sources": ["../virtual-bg/virtual-bg.js"],
  "sourcesContent": ["const script = document.createElement('script');\r\nscript.type = 'text/javascript';\r\nscript.src =\r\n  'https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation@0.1/selfie_segmentation.js';\r\nscript.crossOrigin = 'anonymous';\r\n\r\ndocument.getElementsByTagName('head')[0].appendChild(script);\r\n\r\nconst foregroundCanvasElement = document.createElement('canvas');\r\nconst backgroundCanvasElement = document.createElement('canvas');\r\nconst backgroundCanvasCtx = backgroundCanvasElement.getContext('2d');\r\n\r\nlet outputCanvasCtx = null;\r\nlet effectType = 'blur'; // blur | video | image\r\nlet backgroundImage = null;\r\nlet backgroundVideo = null;\r\nlet foregroundType = 'normal'; // normal | presenter\r\nlet presenterModeOffset = 0;\r\n\r\nexport async function segmentBackground(\r\n  inputVideoElement,\r\n  outputCanvasElement,\r\n  modelSelection = 1\r\n) {\r\n  foregroundCanvasElement.width = backgroundCanvasElement.width =\r\n    outputCanvasElement.width;\r\n  foregroundCanvasElement.height = backgroundCanvasElement.height =\r\n    outputCanvasElement.height;\r\n  outputCanvasCtx = outputCanvasElement.getContext('2d');\r\n\r\n  let selfieSegmentation = new SelfieSegmentation({\r\n    locateFile: (file) => {\r\n      return `https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/${file}`;\r\n    },\r\n  });\r\n  selfieSegmentation.setOptions({\r\n    modelSelection: modelSelection,\r\n  });\r\n  selfieSegmentation.onResults((results) => {\r\n    mergeForegroundBackground(\r\n      foregroundCanvasElement,\r\n      backgroundCanvasElement,\r\n      results\r\n    );\r\n  });\r\n\r\n  inputVideoElement.addEventListener('play', () => {\r\n    async function step() {\r\n      await selfieSegmentation.send({ image: inputVideoElement });\r\n      requestAnimationFrame(step);\r\n    }\r\n    requestAnimationFrame(step);\r\n  });\r\n}\r\n\r\nfunction mergeForegroundBackground(\r\n  foregroundCanvasElement,\r\n  backgroundCanvasElement,\r\n  results\r\n) {\r\n  makeCanvasLayer(results, foregroundCanvasElement, 'foreground');\r\n  if (effectType === 'blur')\r\n    makeCanvasLayer(results, backgroundCanvasElement, 'background');\r\n  else if (effectType === 'image') {\r\n    backgroundCanvasCtx.drawImage(\r\n      backgroundImage,\r\n      0,\r\n      0,\r\n      backgroundCanvasElement.width,\r\n      backgroundCanvasElement.height\r\n    );\r\n  } else if (effectType === 'video') {\r\n    backgroundCanvasCtx.drawImage(\r\n      backgroundVideo,\r\n      0,\r\n      0,\r\n      backgroundCanvasElement.width,\r\n      backgroundCanvasElement.height\r\n    );\r\n  }\r\n  outputCanvasCtx.drawImage(backgroundCanvasElement, 0, 0);\r\n  if (foregroundType === 'presenter')\r\n    outputCanvasCtx.drawImage(\r\n      foregroundCanvasElement,\r\n      foregroundCanvasElement.width * 0.5 - presenterModeOffset,\r\n      foregroundCanvasElement.height * 0.5,\r\n      foregroundCanvasElement.width * 0.5,\r\n      foregroundCanvasElement.height * 0.5\r\n    );\r\n  else outputCanvasCtx.drawImage(foregroundCanvasElement, 0, 0);\r\n}\r\n\r\nfunction makeCanvasLayer(results, canvasElement, type) {\r\n  const canvasCtx = canvasElement.getContext('2d');\r\n\r\n  canvasCtx.save();\r\n\r\n  canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n  canvasCtx.drawImage(\r\n    results.segmentationMask,\r\n    0,\r\n    0,\r\n    canvasElement.width,\r\n    canvasElement.height\r\n  );\r\n  if (type === 'foreground') {\r\n    canvasCtx.globalCompositeOperation = 'source-in';\r\n  }\r\n\r\n  canvasCtx.drawImage(\r\n    results.image,\r\n    0,\r\n    0,\r\n    canvasElement.width,\r\n    canvasElement.height\r\n  );\r\n\r\n  canvasCtx.restore();\r\n}\r\n\r\nexport function applyBlur(blurIntensity = 7) {\r\n  effectType = 'blur';\r\n  foregroundType = 'normal';\r\n  backgroundCanvasCtx.filter = `blur(${blurIntensity}px)`;\r\n}\r\n\r\nexport function applyImageBackground(image) {\r\n  backgroundImage = image;\r\n  foregroundType = 'normal';\r\n  effectType = 'image';\r\n}\r\n\r\nexport function applyVideoBackground(video) {\r\n  backgroundVideo = video;\r\n  video.autoplay = true;\r\n  video.loop = true;\r\n  video.addEventListener('play', () => {\r\n    video.muted = true;\r\n  });\r\n  effectType = 'video';\r\n}\r\n\r\nexport function applyScreenBackground(stream) {\r\n  const videoElement = document.createElement('video');\r\n  videoElement.srcObject = stream;\r\n  backgroundVideo = videoElement;\r\n\r\n  videoElement.autoplay = true;\r\n  videoElement.loop = true;\r\n  videoElement.addEventListener('play', () => {\r\n    videoElement.muted = true;\r\n  });\r\n  effectType = 'video';\r\n}\r\n\r\nexport function changeForegroundType(type, offset = 0) {\r\n  foregroundType = type;\r\n  presenterModeOffset = offset;\r\n}\r\n"],
  "mappings": ";AAAA,IAAM,SAAS,SAAS,cAAc;AACtC,OAAO,OAAO;AACd,OAAO,MACL;AACF,OAAO,cAAc;AAErB,SAAS,qBAAqB,QAAQ,GAAG,YAAY;AAErD,IAAM,0BAA0B,SAAS,cAAc;AACvD,IAAM,0BAA0B,SAAS,cAAc;AACvD,IAAM,sBAAsB,wBAAwB,WAAW;AAE/D,IAAI,kBAAkB;AACtB,IAAI,aAAa;AACjB,IAAI,kBAAkB;AACtB,IAAI,kBAAkB;AACtB,IAAI,iBAAiB;AACrB,IAAI,sBAAsB;AAE1B,iCACE,mBACA,qBACA,iBAAiB,GACjB;AACA,0BAAwB,QAAQ,wBAAwB,QACtD,oBAAoB;AACtB,0BAAwB,SAAS,wBAAwB,SACvD,oBAAoB;AACtB,oBAAkB,oBAAoB,WAAW;AAEjD,MAAI,qBAAqB,IAAI,mBAAmB;AAAA,IAC9C,YAAY,CAAC,SAAS;AACpB,aAAO,+DAA+D;AAAA;AAAA;AAG1E,qBAAmB,WAAW;AAAA,IAC5B;AAAA;AAEF,qBAAmB,UAAU,CAAC,YAAY;AACxC,8BACE,yBACA,yBACA;AAAA;AAIJ,oBAAkB,iBAAiB,QAAQ,MAAM;AAC/C,0BAAsB;AACpB,YAAM,mBAAmB,KAAK,EAAE,OAAO;AACvC,4BAAsB;AAAA;AAExB,0BAAsB;AAAA;AAAA;AAI1B,mCACE,0BACA,0BACA,SACA;AACA,kBAAgB,SAAS,0BAAyB;AAClD,MAAI,eAAe;AACjB,oBAAgB,SAAS,0BAAyB;AAAA,WAC3C,eAAe,SAAS;AAC/B,wBAAoB,UAClB,iBACA,GACA,GACA,yBAAwB,OACxB,yBAAwB;AAAA,aAEjB,eAAe,SAAS;AACjC,wBAAoB,UAClB,iBACA,GACA,GACA,yBAAwB,OACxB,yBAAwB;AAAA;AAG5B,kBAAgB,UAAU,0BAAyB,GAAG;AACtD,MAAI,mBAAmB;AACrB,oBAAgB,UACd,0BACA,yBAAwB,QAAQ,MAAM,qBACtC,yBAAwB,SAAS,KACjC,yBAAwB,QAAQ,KAChC,yBAAwB,SAAS;AAAA;AAEhC,oBAAgB,UAAU,0BAAyB,GAAG;AAAA;AAG7D,yBAAyB,SAAS,eAAe,MAAM;AACrD,QAAM,YAAY,cAAc,WAAW;AAE3C,YAAU;AAEV,YAAU,UAAU,GAAG,GAAG,cAAc,OAAO,cAAc;AAC7D,YAAU,UACR,QAAQ,kBACR,GACA,GACA,cAAc,OACd,cAAc;AAEhB,MAAI,SAAS,cAAc;AACzB,cAAU,2BAA2B;AAAA;AAGvC,YAAU,UACR,QAAQ,OACR,GACA,GACA,cAAc,OACd,cAAc;AAGhB,YAAU;AAAA;AAGL,mBAAmB,gBAAgB,GAAG;AAC3C,eAAa;AACb,mBAAiB;AACjB,sBAAoB,SAAS,QAAQ;AAAA;AAGhC,8BAA8B,OAAO;AAC1C,oBAAkB;AAClB,mBAAiB;AACjB,eAAa;AAAA;AAGR,8BAA8B,OAAO;AAC1C,oBAAkB;AAClB,QAAM,WAAW;AACjB,QAAM,OAAO;AACb,QAAM,iBAAiB,QAAQ,MAAM;AACnC,UAAM,QAAQ;AAAA;AAEhB,eAAa;AAAA;AAGR,+BAA+B,QAAQ;AAC5C,QAAM,eAAe,SAAS,cAAc;AAC5C,eAAa,YAAY;AACzB,oBAAkB;AAElB,eAAa,WAAW;AACxB,eAAa,OAAO;AACpB,eAAa,iBAAiB,QAAQ,MAAM;AAC1C,iBAAa,QAAQ;AAAA;AAEvB,eAAa;AAAA;AAGR,8BAA8B,MAAM,SAAS,GAAG;AACrD,mBAAiB;AACjB,wBAAsB;AAAA;",
  "names": []
}
